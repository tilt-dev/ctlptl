//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2020 Tilt Dev

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package k3dv1alpha4

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvVarWithNodeFilters) DeepCopyInto(out *EnvVarWithNodeFilters) {
	*out = *in
	if in.NodeFilters != nil {
		in, out := &in.NodeFilters, &out.NodeFilters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvVarWithNodeFilters.
func (in *EnvVarWithNodeFilters) DeepCopy() *EnvVarWithNodeFilters {
	if in == nil {
		return nil
	}
	out := new(EnvVarWithNodeFilters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K3sArgWithNodeFilters) DeepCopyInto(out *K3sArgWithNodeFilters) {
	*out = *in
	if in.NodeFilters != nil {
		in, out := &in.NodeFilters, &out.NodeFilters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K3sArgWithNodeFilters.
func (in *K3sArgWithNodeFilters) DeepCopy() *K3sArgWithNodeFilters {
	if in == nil {
		return nil
	}
	out := new(K3sArgWithNodeFilters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelWithNodeFilters) DeepCopyInto(out *LabelWithNodeFilters) {
	*out = *in
	if in.NodeFilters != nil {
		in, out := &in.NodeFilters, &out.NodeFilters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelWithNodeFilters.
func (in *LabelWithNodeFilters) DeepCopy() *LabelWithNodeFilters {
	if in == nil {
		return nil
	}
	out := new(LabelWithNodeFilters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectMeta) DeepCopyInto(out *ObjectMeta) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectMeta.
func (in *ObjectMeta) DeepCopy() *ObjectMeta {
	if in == nil {
		return nil
	}
	out := new(ObjectMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortWithNodeFilters) DeepCopyInto(out *PortWithNodeFilters) {
	*out = *in
	if in.NodeFilters != nil {
		in, out := &in.NodeFilters, &out.NodeFilters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortWithNodeFilters.
func (in *PortWithNodeFilters) DeepCopy() *PortWithNodeFilters {
	if in == nil {
		return nil
	}
	out := new(PortWithNodeFilters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfig) DeepCopyInto(out *SimpleConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ObjectMeta = in.ObjectMeta
	out.ExposeAPI = in.ExposeAPI
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]VolumeWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]PortWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Options.DeepCopyInto(&out.Options)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]EnvVarWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Registries.DeepCopyInto(&out.Registries)
	if in.HostAliases != nil {
		in, out := &in.HostAliases, &out.HostAliases
		*out = make([]SimpleConfigHostAlias, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfig.
func (in *SimpleConfig) DeepCopy() *SimpleConfig {
	if in == nil {
		return nil
	}
	out := new(SimpleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigHostAlias) DeepCopyInto(out *SimpleConfigHostAlias) {
	*out = *in
	if in.Hostnames != nil {
		in, out := &in.Hostnames, &out.Hostnames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigHostAlias.
func (in *SimpleConfigHostAlias) DeepCopy() *SimpleConfigHostAlias {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigHostAlias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptions) DeepCopyInto(out *SimpleConfigOptions) {
	*out = *in
	in.K3dOptions.DeepCopyInto(&out.K3dOptions)
	in.K3sOptions.DeepCopyInto(&out.K3sOptions)
	out.KubeconfigOptions = in.KubeconfigOptions
	in.Runtime.DeepCopyInto(&out.Runtime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptions.
func (in *SimpleConfigOptions) DeepCopy() *SimpleConfigOptions {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptionsK3d) DeepCopyInto(out *SimpleConfigOptionsK3d) {
	*out = *in
	in.Loadbalancer.DeepCopyInto(&out.Loadbalancer)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptionsK3d.
func (in *SimpleConfigOptionsK3d) DeepCopy() *SimpleConfigOptionsK3d {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptionsK3d)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptionsK3dLoadbalancer) DeepCopyInto(out *SimpleConfigOptionsK3dLoadbalancer) {
	*out = *in
	if in.ConfigOverrides != nil {
		in, out := &in.ConfigOverrides, &out.ConfigOverrides
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptionsK3dLoadbalancer.
func (in *SimpleConfigOptionsK3dLoadbalancer) DeepCopy() *SimpleConfigOptionsK3dLoadbalancer {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptionsK3dLoadbalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptionsK3s) DeepCopyInto(out *SimpleConfigOptionsK3s) {
	*out = *in
	if in.ExtraArgs != nil {
		in, out := &in.ExtraArgs, &out.ExtraArgs
		*out = make([]K3sArgWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeLabels != nil {
		in, out := &in.NodeLabels, &out.NodeLabels
		*out = make([]LabelWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptionsK3s.
func (in *SimpleConfigOptionsK3s) DeepCopy() *SimpleConfigOptionsK3s {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptionsK3s)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptionsKubeconfig) DeepCopyInto(out *SimpleConfigOptionsKubeconfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptionsKubeconfig.
func (in *SimpleConfigOptionsKubeconfig) DeepCopy() *SimpleConfigOptionsKubeconfig {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptionsKubeconfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigOptionsRuntime) DeepCopyInto(out *SimpleConfigOptionsRuntime) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelWithNodeFilters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigOptionsRuntime.
func (in *SimpleConfigOptionsRuntime) DeepCopy() *SimpleConfigOptionsRuntime {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigOptionsRuntime)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigRegistries) DeepCopyInto(out *SimpleConfigRegistries) {
	*out = *in
	if in.Use != nil {
		in, out := &in.Use, &out.Use
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Create != nil {
		in, out := &in.Create, &out.Create
		*out = new(SimpleConfigRegistryCreateConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigRegistries.
func (in *SimpleConfigRegistries) DeepCopy() *SimpleConfigRegistries {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigRegistries)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleConfigRegistryCreateConfig) DeepCopyInto(out *SimpleConfigRegistryCreateConfig) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleConfigRegistryCreateConfig.
func (in *SimpleConfigRegistryCreateConfig) DeepCopy() *SimpleConfigRegistryCreateConfig {
	if in == nil {
		return nil
	}
	out := new(SimpleConfigRegistryCreateConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SimpleExposureOpts) DeepCopyInto(out *SimpleExposureOpts) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SimpleExposureOpts.
func (in *SimpleExposureOpts) DeepCopy() *SimpleExposureOpts {
	if in == nil {
		return nil
	}
	out := new(SimpleExposureOpts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TypeMeta) DeepCopyInto(out *TypeMeta) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TypeMeta.
func (in *TypeMeta) DeepCopy() *TypeMeta {
	if in == nil {
		return nil
	}
	out := new(TypeMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeWithNodeFilters) DeepCopyInto(out *VolumeWithNodeFilters) {
	*out = *in
	if in.NodeFilters != nil {
		in, out := &in.NodeFilters, &out.NodeFilters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeWithNodeFilters.
func (in *VolumeWithNodeFilters) DeepCopy() *VolumeWithNodeFilters {
	if in == nil {
		return nil
	}
	out := new(VolumeWithNodeFilters)
	in.DeepCopyInto(out)
	return out
}
